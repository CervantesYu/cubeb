language: cpp
dist: trusty
sudo: required
matrix:
  include:
    - compiler: clang
      os: linux
    - compiler: gcc
      env: COMPILER_CXX=g++-4.8 COMPILER_CC=gcc-4.8
      os: linux
    - compiler: gcc
      env: HOST=i686-w64-mingw32
      os: linux
    - compiler: clang
      os: osx
    - compiler: clang
      env: SCAN_BUILD=true
      os: linux
    - compiler: gcc
      env: COMPILER_CXX=g++-4.8 COMPILER_CC=gcc-4.8
      env: SCAN_BUILD=true
      os: linux
    - compiler: clang
      env: SCAN_BUILD=true
      os: osx
  exclude:
    - os: osx
      compiler: gcc
    - os: linux
      compiler: gcc
      env:

before_install:
  - if [[ -n $SCAN_BUILD ]]; then
      if [[ $TRAVIS_OS_NAME = "osx" ]]; then
        . scan-build-install.sh;
      else
        export SCAN_BUILD_PATH=scan-build;
      fi
    fi
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      sudo apt-get update -qq;
    fi
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      if [ -z "$HOST" ]; then
        sudo apt-get install -y libpulse-dev libasound2-dev pulseaudio doxygen;
      fi
    fi
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      if [ ! -z "$HOST" ]; then
        sudo apt-get install -qq mingw-w64 mingw-w64-tools g++-mingw-w64 binutils-mingw-w64;
      fi
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew uninstall libtool && brew install libtool; fi
before_script:
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      if [ ! -z "$HOST" ]; then
        unset CC;
        unset CXX;
      fi
    fi
  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      if [ -z "$COMPILER_CXX"]; then
        export CC=$COMPILER_CC;
        export CXX=$COMPILER_CXX;
      fi
    fi
  - mkdir build
  - $SCAN_BUILD_PATH cmake ..
script:
  - echo $SCAN_BUILD_PATH
  - $SCAN_BUILD_PATH make
  - if [ -z "$HOST"  ]; then
      make test;
    fi
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - clang
      - g++-4.8
      - gcc-4.8
